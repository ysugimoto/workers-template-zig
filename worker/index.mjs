import b from"./build/main.wasm";var f=512,c=t=>{let r="";for(let e=0;e<t.byteLength&&!(t[e]===0||(r+=String.fromCharCode(t[e]&255),t[e]>>8===0));e++)if(t[e]>>16===0){r+=String.fromCharCode(t[e]>>8&255);break}else if(t[e]>>24===0){r+=String.fromCharCode(t[e]>>8&255),r+=String.fromCharCode(t[e]>>16&255);break}else r+=String.fromCharCode(t[e]>>8&255),r+=String.fromCharCode(t[e]>>16&255),r+=String.fromCharCode(t[e]>>24&255);return r},F=(t,r)=>{let e=[];for(let n=0;n<r.length;n+=4){let o=0;o|=r[n]?r[n].codePointAt(0):0,o|=r[n+1]?r[n+1].codePointAt(0)<<8:0,o|=r[n+2]?r[n+2].codePointAt(0)<<16:0,o|=r[n+3]?r[n+3].codePointAt(0)<<24:0,e.push(o)}return t.subarray(0,e.length).set(e),0},S={async fetch(t,r){let{exports:{memory:e,hello:n,greet:o,add:l}}=new WebAssembly.Instance(b,{}),u=new Uint32Array(e.buffer),d=new URL(t.url),a,s,i;switch(d.pathname){case"/greet":let g=d.searchParams.get("name")||"Zig",h=F(u,g);a=o(h),s=a-a%4,i=c(new Uint32Array(e.buffer,s,f));break;case"/add":i=`add() example, 1 + 2 = ${l(1+2)}`;break;case"/":a=n(),s=a-a%4,i=c(new Uint32Array(e.buffer,s,f));break;default:return new Response("Not Found",{status:404})}return new Response(i)}};export{S as default};
